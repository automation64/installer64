#!/usr/bin/env bash
# Template: 2.3.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Home root
declare INST64_HOME="${HOME}/at64"
# BashLib64 location
declare INST64_BASHLIB64="${INST64_BASHLIB64:-}"
[[ -d "$INST64_HOME" ]] && INST64_BASHLIB64="${INST64_BASHLIB64:-${INST64_HOME}/bl64}" || INST64_BASHLIB64="${INST64_BASHLIB64:-/opt/bl64}" 
# X_IMPORTS_PLACEHOLDER_X
  { echo 'Error: BashLib64 not found. Please run the install-bashlib64 script and retry.' && exit 1; }

#
# Globals
#

# Enable debugging? Set to YES to enable
declare INST64_DEBUG="${INST64_DEBUG:-}"
# Base path for local applications
declare INST64_LOCAL_ROOT="${INST64_LOCAL_ROOT:-/usr/local}"
# Local applications binaries location
declare INST64_LOCAL_BIN="${INST64_LOCAL_BIN:-${INST64_LOCAL_ROOT}/bin}"
# Location for temporary files
declare INST64_TMP="${INST64_TMP:-/tmp}"
# Base path for 3rd party applications
declare INST64_OPT_ROOT="${INST64_OPT_ROOT:-}"
# Install system wide? Requires root privilege
declare INST64_SYSTEM_WIDE="${INST64_SYSTEM_WIDE:-}"

# X_GLOBALS_PLACEHOLDER_X
declare INST64_X_APP_NAME_CAPS_X_PACKAGES=''
# optional # declare INST64_X_APP_NAME_CAPS_X_PACKAGES_PRE=''
# optional # declare INST64_X_APP_NAME_CAPS_X_PACKAGES_POST=''
declare INST64_X_APP_NAME_CAPS_X_CLI_NAME='X_CLI_NAME_X'
declare INST64_X_APP_NAME_CAPS_X_CLI_PATH=''

#
# Functions
#

# X_STAND_ALONE_FUNCTIONS_X #

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function inst64_X_APP_NAME_X_install() {
  bl64_dbg_app_show_function
  # X_INSTALL_PLACEHOLDER_X
}

#######################################
# Select installation packages and related information
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package name list
# Returns:
#   0: selection ok
#   >0: selection failed
#######################################
function inst64_X_APP_NAME_X_select_packages() {
  bl64_dbg_app_show_function
  # X_SELECT_PKG_PLACEHOLDER_X
  [[ -z "$INST64_X_APP_NAME_CAPS_X_PACKAGES" ]] && bl64_msg_show_error 'unable to determine package name' && return 1
  return 0
}

#######################################
# Prepare installation
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Preparation progress and errors
# Returns:
#   0: preparation ok
#   >0: preparation failed
#######################################
function inst64_X_APP_NAME_X_prepare() {
  bl64_dbg_app_show_function
  bl64_msg_show_task 'prepare deployment'
  # X_PREPARE_PLACEHOLDER_X
}

#######################################
# Verify installation
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Verification progress and errors
# Returns:
#   0: verification ok
#   >0: verification failed
#######################################
function inst64_X_APP_NAME_X_verify() {
  bl64_dbg_app_show_function
  bl64_msg_show_task 'verify deployment'
  # X_VERIFY_PLACEHOLDER_X
  # example # "$INST64_X_APP_NAME_CAPS_X_CLI_PATH" --version
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: initialization failed
#######################################
function inst64_X_APP_NAME_X_initialize() {
  bl64_dbg_app_show_function
  if [[ -z "$INST64_SYSTEM_WIDE" ]]; then
    [[ -d "$INST64_HOME" ]] && INST64_SYSTEM_WIDE='NO' || INST64_SYSTEM_WIDE='YES'
  fi
  if [[ -z "$INST64_OPT_ROOT" ]]; then
    [[ "$INST64_SYSTEM_WIDE" == 'NO' ]] && INST64_OPT_ROOT="$INST64_HOME" || INST64_OPT_ROOT='/opt'
  fi
  # X_INIT_PLACEHOLDER_X
  # X_PRE_REQ_PLACEHOLDER_X
}

#
# Main
#

declare inst64_X_APP_NAME_X_installer_description='Install application: X_APP_FULL_NAME_X'

bl64_lib_script_version_set '1.0.0'
bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$inst64_X_APP_NAME_X_installer_description"

[[ -n "$INST64_DEBUG" ]] && bl64_dbg_all_enable
inst64_X_APP_NAME_X_initialize &&
  inst64_X_APP_NAME_X_prepare &&
  inst64_X_APP_NAME_X_install &&
  inst64_X_APP_NAME_X_verify
  # X_MAIN_POST_VERIFY_PLACEHOLDER_X
bl64_msg_show_batch_finish $? "$inst64_X_APP_NAME_X_installer_description"
