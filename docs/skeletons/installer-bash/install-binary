#!/usr/bin/env bash
# Template: install-bash-binary-1.0.0
#   Skeleton: install-bash-custom-1.0.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

declare INST64_LIB_PATH="${INST64_LIB_PATH:-/opt/inst64}"
[[ ! -d "$INST64_LIB_PATH" && -d "${HOME}/at64/inst64" ]] && INST64_LIB_PATH="${HOME}/at64/inst64"
# shellcheck source-path=src disable=SC2015
source "${INST64_LIB_PATH}/lib-bash" ||
  { echo 'Fatal: unable to load Installer64 libraries.' && exit 1; }

#
# Globals
#

# Installation method
declare INST64_X_APP_NAME_CAPS_X_METHOD="${INST64_X_APP_NAME_CAPS_X_METHOD:-BINARY}"
# Installation destination
declare INST64_X_APP_NAME_CAPS_X_TARGET="${INST64_X_APP_NAME_CAPS_X_TARGET:-}"
# Hardware architecture
declare INST64_X_APP_NAME_CAPS_X_PLATFORM="${INST64_X_APP_NAME_CAPS_X_PLATFORM:-}"
# Application version
declare INST64_X_APP_NAME_CAPS_X_VERSION="${INST64_X_APP_NAME_CAPS_X_VERSION:-latest}"

# App information
INST64_APP_NAME='X_APP_NAME_X'
INST64_APP_ID='X_APP_NAME_CAPS_X'
INST64_APP_FULL_NAME='X_APP_FULL_NAME_X'
# CLI information
INST64_CLI_NAME='X_CLI_NAME_X'
INST64_CLI_PATH='X_CLI_CUSTOM_PATH_X'
# shellcheck disable=SC2034
INST64_SCRIPT_VERSION='1.0.0'

# X_GLOBALS_METHOD_PLACEHOLDER_X
INST64_GH_REPO_OWNER='X_REPO_PATH_X'
INST64_GH_REPO_NAME='X_REPO_URL_X'
INST64_GH_REPO_API='X_REPO_API_X'

#
# Functions
#

function inst64_X_APP_NAME_X_install_binary() {
  inst64_lib_task_deploy
  # X_INSTALL_BINARY_PLACEHOLDER_X
}

function inst64_X_APP_NAME_X_prepare() {
  inst64_lib_step_prepare || return 0
  if [[ "$INST64_X_APP_NAME_CAPS_X_METHOD" == 'BINARY' ]]; then
    inst64_lib_base_create_path
    if [[ ! -d "$INST64_X_APP_NAME_CAPS_X_TARGET" ]]; then
      mkdir -p "$INST64_X_APP_NAME_CAPS_X_TARGET" &&
        chmod "$INST64_TARGET_MODE_DIR" "$INST64_X_APP_NAME_CAPS_X_TARGET"
    fi
  fi
}

function inst64_X_APP_NAME_X_install() {
  inst64_lib_step_install || return 0
  if [[ "$INST64_X_APP_NAME_CAPS_X_METHOD" == 'BINARY' ]]; then
    inst64_X_APP_NAME_X_install_binary
  fi
}

function inst64_X_APP_NAME_X_setup() {
  inst64_lib_step_setup || return 0
  if [[ "$INST64_X_APP_NAME_CAPS_X_METHOD" == 'BINARY' ]]; then
    : # X_SETUP_PLACEHOLDER_X
  fi
}

function inst64_X_APP_NAME_X_verify() {
  inst64_lib_step_verify || return 0
  "${INST64_CLI_PATH}/${INST64_CLI_NAME}" --version || return $?
  if [[ "$INST64_X_APP_NAME_CAPS_X_METHOD" == 'BINARY' ]]; then
    inst64_lib_app_register_version
  fi
}

function inst64_X_APP_NAME_X_select_platform() {
  if [[ "$INST64_X_APP_NAME_CAPS_X_METHOD" == 'BINARY' ]]; then
    if [[ -z "$INST64_X_APP_NAME_CAPS_X_PLATFORM" ]]; then
      # X_PLATFORM_SELECTION_PLACEHOLDER_X
      INST64_X_APP_NAME_CAPS_X_PLATFORM="$INST64_CPU_ALL_ALL"
    fi
    inst64_lib_platform_check_cpu
  fi
}

function inst64_X_APP_NAME_X_select_packages() {
  if [[ "$INST64_X_APP_NAME_CAPS_X_METHOD" == 'BINARY' ]]; then
    if [[ "$INST64_X_APP_NAME_CAPS_X_VERSION" == 'latest' ]]; then
      INST64_X_APP_NAME_CAPS_X_VERSION="$(inst64_lib_github_release_get_version)" ||
        return $?
    fi
    INST64_PKG_MAIN="X_PACKAGE_NAME_PLACEHOLDER_X"
  fi
  inst64_lib_package_check_definition
}

function inst64_X_APP_NAME_X_initialize() {
  inst64_lib_base_initialize &&
    inst64_lib_app_check_method 'BINARY' ||
    return $?

  if [[ "$INST64_X_APP_NAME_CAPS_X_METHOD" == 'BINARY' ]]; then
    if inst64_lib_base_is_system_wide; then
      inst64_lib_check_privilege_root ||
        return $?
    fi
  fi

  inst64_X_APP_NAME_X_select_platform &&
    inst64_X_APP_NAME_X_select_packages ||
    return $?

  inst64_lib_app_check_installed && return 0
  inst64_lib_message_show_parameters
}

#
# Main
#

declare -i inst64_script_status=0

inst64_lib_task_process_start &&
  inst64_X_APP_NAME_X_initialize &&
  inst64_X_APP_NAME_X_prepare &&
  inst64_X_APP_NAME_X_install &&
  inst64_X_APP_NAME_X_setup &&
  inst64_X_APP_NAME_X_verify
inst64_script_status=$?

inst64_lib_task_process_finish $inst64_script_status
exit $inst64_script_status
