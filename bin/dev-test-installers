#!/usr/bin/env bash
#
# Run test-cases
#
# * Template: 2.0.1
#

#
# Imports
#

# shellcheck source=bin/dev-set
source ./bin/dev-set || exit 1
# shellcheck source=lib/bl64/bashlib64.bash
source "${DEV_CICD_BASHLIB64}/bashlib64.bash" || exit 1

#
# Functions
#

function dev_test_run() {
  local test_target="$1"
  local container_path_installer64='/opt/installer64'
  local container_path_bl64='/opt/bl64'
  local container_path_test='/test'
  local container_uri=''
  local image_name="DEV_TEST_CONTAINER_${test_target}"
  local test_list="DEV_TEST_LIST_${test_target}"
  local test_file=''

  [[ ! -v "$image_name" ]] && bl64_msg_show_error "invalid container image CICD variable name (${image_name})" && return 1
  [[ ! -v "$test_list" ]] && bl64_msg_show_error "invalid test list CICD variable name (${test_list})" && return 1

  container_uri="${DEV_CICD_TEST_REGISTRY}/${!image_name}"
  bl64_msg_show_info "target test container: ${container_uri}"
  for test_file in ${!test_list}; do
    bl64_msg_show_phase "run installer test (${test_file})"
    # shellcheck disable=SC2086
    bl64_cnt_run \
      $BL64_CNT_SET_RM \
      $BL64_CNT_SET_TTY \
      --env=INST64_TEST_ENVIRONMENT='ON' \
      --mount "type=bind,source=${DEV_SRC},target=${container_path_installer64},readonly" \
      --mount "type=bind,source=${DEV_CICD_BASHLIB64},target=${container_path_bl64},readonly" \
      --mount "type=bind,source=${DEV_TEST},target=${container_path_test},readonly" \
      --entrypoint="${container_path_test}/${DEV_CICD_TEST_CASES}/${test_file}.sh" \
      "$container_uri" ||
      return $?
  done
}

#
# Main
#

declare -u test_target="${1:-}"

[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable

bl64_check_parameter 'test_target' &&
  bl64_check_export 'DEV_CICD_TEST_REGISTRY' &&
  bl64_check_export 'DEV_CICD_TEST_CASES' &&
  bl64_cnt_setup ||
  exit $?

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start 'test-installer'
dev_test_run "$test_target"
bl64_msg_show_batch_finish $? 'test-installer'
