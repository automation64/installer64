#!/usr/bin/env bash
# Template: 1.0.0
#######################################
# Installer64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/installer64
# Version: 1.1.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Base Installer64 parameters
export INST64_BASHLIB64="${INST64_BASHLIB64:-/opt/bl64/bashlib64.bash}"
export INST64_DEBUG="${INST64_DEBUG:-}"
export INST64_INSTALLER_ROOT="${INST64_INSTALLER_ROOT:-/opt/installer64}"
export INST64_LOCAL_ROOT="${INST64_LOCAL_ROOT:-/usr/local}"
export INST64_LOCAL_BIN="${INST64_LOCAL_BIN:-${INST64_LOCAL_ROOT}/bin}"
export INST64_OPT_ROOT="${INST64_OPT_ROOT:-/opt}"
export INST64_TMP="${INST64_TMP:-/tmp}"

# shellcheck source=SCRIPTDIR/../lib/bashlib64.bash
source "$INST64_BASHLIB64" || { echo 'Error: BashLib64 not found. Please run the install-bashlib64 script and retry.' && exit 1; }

#
# Globals
#

export INST64_KUBECTL_PLATFORM="${INST64_KUBECTL_PLATFORM:-linux/amd64}"
export INST64_KUBECTL_SOURCE="${INST64_KUBECTL_SOURCE:-https://dl.k8s.io}"
export INST64_KUBECTL_TARGET="${INST64_KUBECTL_TARGET:-${INST64_OPT_ROOT}/kubectl}"
export INST64_KUBECTL_VERSION="${INST64_KUBECTL_VERSION:-stable}"

#
# Functions
#

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function inst64_kubectl_install() {
  bl64_dbg_app_show_function
  local package_name='kubectl'
  local package_url=''
  local package_url_stable="${INST64_KUBECTL_SOURCE}/release/stable.txt"
  local app_target_mode='0755'
  local app_target_owner='root'
  local app_cli_mode='0755'
  local app_cli='kubectl'
  local app_cli_release=''

  bl64_msg_show_task 'download application'
  if [[ "$INST64_KUBECTL_VERSION" == 'stable' ]]; then
    INST64_KUBECTL_VERSION="$(bl64_rxtx_run_curl $BL64_RXTX_SET_CURL_SILENT $BL64_RXTX_SET_CURL_REDIRECT "$package_url_stable")"
    [[ -z "$INST64_KUBECTL_VERSION" ]] && bl64_msg_show_error "unable to determine stable version (${package_url_stable})" &&
      return 1
    INST64_KUBECTL_VERSION="${INST64_KUBECTL_VERSION#v}"
  fi
  package_url="${INST64_KUBECTL_SOURCE}/release/v${INST64_KUBECTL_VERSION}/bin/${INST64_KUBECTL_PLATFORM}"
  app_cli_release="${app_cli}-${INST64_KUBECTL_VERSION}"

  bl64_fs_create_dir "$app_target_mode" "$app_target_owner" "$app_target_owner" "$INST64_KUBECTL_TARGET" &&
    bl64_rxtx_web_get_file "${package_url}/${package_name}" "${INST64_KUBECTL_TARGET}/${app_cli_release}" "$BL64_VAR_OFF" "$app_cli_mode" ||
    return $?

  bl64_msg_show_task "publish application to searchable path (${INST64_LOCAL_BIN})"
  # shellcheck disable=SC2086
  bl64_fs_run_ln $BL64_FS_SET_LN_FORCE $BL64_FS_SET_LN_SYMBOLIC "${INST64_KUBECTL_TARGET}/${app_cli_release}" "${INST64_LOCAL_BIN}/${app_cli}" ||
    return $?

  return 0
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function inst64_kubectl_initialize() {
  bl64_dbg_app_show_function

    bl64_check_privilege_root
}

#
# Main
#

declare inst64_kubectl_installer_description='Install application: KubeCTL'
declare -i inst64_kubectl_status=0

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$inst64_kubectl_installer_description"

[[ -n "$INST64_DEBUG" ]] && bl64_dbg_all_enable
inst64_kubectl_initialize &&
  inst64_kubectl_install
inst64_kubectl_status=$?

bl64_msg_show_batch_finish "$inst64_kubectl_status" "$inst64_kubectl_installer_description"
exit $inst64_kubectl_status
