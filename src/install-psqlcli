#!/usr/bin/env bash
# Template: 1.1.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Home root
declare INST64_HOME="${HOME}/at64"
# BashLib64 location
declare INST64_BASHLIB64="${INST64_BASHLIB64:-}"
[[ -d "$INST64_HOME" ]] && INST64_BASHLIB64="${INST64_BASHLIB64:-${INST64_HOME}/bl64}" || INST64_BASHLIB64="${INST64_BASHLIB64:-/opt/bl64}" 
# shellcheck source=lib/bl64/bashlib64.bash
source "${INST64_BASHLIB64}/bashlib64.bash" ||
  { echo 'Error: BashLib64 not found. Please run the install-bashlib64 script and retry.' && exit 1; }

#
# Globals
#

# Enable debugging? Set to YES to enable
declare INST64_DEBUG="${INST64_DEBUG:-}"
# Base path for local applications
declare INST64_LOCAL_ROOT="${INST64_LOCAL_ROOT:-/usr/local}"
# Local applications binaries location
declare INST64_LOCAL_BIN="${INST64_LOCAL_BIN:-${INST64_LOCAL_ROOT}/bin}"
# Base path for 3rd party applications
declare INST64_OPT_ROOT="${INST64_OPT_ROOT:-}"
# Install system wide? Requires root privilege
declare INST64_SYSTEM_WIDE="${INST64_SYSTEM_WIDE:-}"

declare INST64_PSQLCLI_VERSION="${INST64_PSQLCLI_VERSION:-15}"

#
# Functions
#

function inst64_psqlcli_install_v13() {
  local repository=''
  local packages=''

  if bl64_os_is_distro "${BL64_OS_OL}-8"; then
    repository='https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm'
    packages='postgresql13'
    bl64_msg_show_task 'Disable built-in postgresql yum repository'
    # shellcheck disable=SC2086
    bl64_pkg_run_dnf $BL64_PKG_SET_ASSUME_YES module disable postgresql &&
      bl64_msg_show_task 'Add postgresql.org yum repository' &&
      bl64_pkg_deploy "$repository"
  elif bl64_os_is_distro "${BL64_OS_OL}-9"; then
    repository='https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm'
    packages='postgresql13'
    bl64_msg_show_task 'Disable built-in postgresql yum repository'
    # shellcheck disable=SC2086
    bl64_pkg_run_dnf $BL64_PKG_SET_ASSUME_YES module disable postgresql &&
      bl64_msg_show_task 'Add postgresql.org yum repository' &&
      bl64_pkg_deploy "$repository"
  fi
  # shellcheck disable=SC2181
  (($? != 0)) && return 1

  bl64_msg_show_task 'deploy application'
  # shellcheck disable=SC2086
  bl64_pkg_deploy $packages
}

function inst64_psqlcli_install_v15() {
  local packages=''
  local repository=''

  if bl64_os_is_distro "${BL64_OS_OL}-9"; then
    repository='https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm'
    packages='postgresql15'
    bl64_msg_show_task 'Disable built-in postgresql yum repository'
    # shellcheck disable=SC2086
    bl64_pkg_run_dnf $BL64_PKG_SET_ASSUME_YES module disable postgresql &&
      bl64_msg_show_task 'Add postgresql.org yum repository' &&
      bl64_pkg_deploy "$repository"
  fi
  # shellcheck disable=SC2181
  (($? != 0)) && return 1

  bl64_msg_show_task 'deploy packages'
  # shellcheck disable=SC2086
  bl64_pkg_deploy $packages
}

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function inst64_psqlcli_install() {
  bl64_dbg_app_show_function

  # shellcheck disable=SC2249
  case "$INST64_PSQLCLI_VERSION" in
  '13') inst64_psqlcli_install_v13 ;;
  '15') inst64_psqlcli_install_v15 ;;
  esac
  # shellcheck disable=SC2181
  (($? != 0)) && return 1

  bl64_msg_show_task 'cleanup temporary files'
  bl64_fs_cleanup_full
  return 0
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function inst64_psqlcli_initialize() {
  bl64_dbg_app_show_function
  if [[ -z "$INST64_SYSTEM_WIDE" ]]; then
    [[ -d "$INST64_HOME" ]] && INST64_SYSTEM_WIDE='NO' || INST64_SYSTEM_WIDE='YES'
  fi
  if [[ -z "$INST64_OPT_ROOT" ]]; then
    [[ "$INST64_SYSTEM_WIDE" == 'NO' ]] && INST64_OPT_ROOT="$INST64_HOME" || INST64_OPT_ROOT='/opt'
  fi

  bl64_check_privilege_root &&
    bl64_pkg_setup ||
    return $?

  case "$INST64_PSQLCLI_VERSION" in
  '13') bl64_os_check_version "${BL64_OS_OL}-8" "${BL64_OS_OL}-9" ;;
  '15') bl64_os_check_version "${BL64_OS_OL}-9" ;;
  *) bl64_check_alert_unsupported "PSQL CLI Version: ${INST64_PSQLCLI_VERSION}" ;;
  esac
}

#
# Main
#

declare inst64_psqlcli_installer_description='Install application: PostgreSQL CLI'
declare -i inst64_psqlcli_status=0

bl64_lib_script_version_set '1.1.0'
bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$inst64_psqlcli_installer_description"

[[ -n "$INST64_DEBUG" ]] && bl64_dbg_all_enable
inst64_psqlcli_initialize &&
  inst64_psqlcli_install
inst64_psqlcli_status=$?

bl64_msg_show_batch_finish "$inst64_psqlcli_status" "$inst64_psqlcli_installer_description"
# shellcheck disable=SC2086
exit $inst64_psqlcli_status
