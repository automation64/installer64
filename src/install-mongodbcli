#!/usr/bin/env bash
# Template: 1.1.0
#######################################
# Installer64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/installer64
# Version: 1.2.1
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Home root
declare INST64_HOME="${HOME}/at64"
# BashLib64 location
declare INST64_BASHLIB64=''
[[ -d "$INST64_HOME" ]] && INST64_BASHLIB64="${INST64_BASHLIB64:-${INST64_HOME}/bl64}" || INST64_BASHLIB64="${INST64_BASHLIB64:-/opt/bl64}" 
# Enable debugging? Set to YES to enable
declare INST64_DEBUG="${INST64_DEBUG:-}"
# Base path for local applications
declare INST64_LOCAL_ROOT="${INST64_LOCAL_ROOT:-/usr/local}"
# Local applications binaries location
declare INST64_LOCAL_BIN="${INST64_LOCAL_BIN:-${INST64_LOCAL_ROOT}/bin}"
# Base path for 3rd party applications
declare INST64_OPT_ROOT="${INST64_OPT_ROOT:-/opt}"

# shellcheck source=lib/bl64/bashlib64.bash
source "${INST64_BASHLIB64}/bashlib64.bash" ||
  { echo 'Error: BashLib64 not found. Please run the install-bashlib64 script and retry.' && exit 1; }

#
# Globals
#

declare INST64_MONGODBCLI_VERSION="${INST64_MONGODBCLI_VERSION:-6}"

#
# Functions
#

function inst64_mongodbcli_install_v5() {
  local repository_name=''
  local repository_platform=''
  local repository_url=''
  local repository_key=''
  local packages=''

  if bl64_os_is_distro "${BL64_OS_OL}-8" "${BL64_OS_OL}-9"; then
    bl64_msg_show_task 'Add YUM package repository'
    repository_name='mongodb-org-5.0'
    repository_platform='x86_64'
    repository_url="https://repo.mongodb.org/yum/redhat/\$releasever/mongodb-org/5.0/${repository_platform}/"
    repository_key='https://www.mongodb.org/static/pgp/server-5.0.asc'
    packages='mongodb-atlas mongodb-atlas-cli mongodb-database-tools mongodb-mongosh'
    bl64_pkg_repository_add "$repository_name" "$repository_url" "$repository_key"
  fi
  # shellcheck disable=SC2181
  (($? != 0)) && return 1

  bl64_msg_show_task 'deploy packages'
  # shellcheck disable=SC2086
  bl64_pkg_deploy $packages
}

function inst64_mongodbcli_install_v6() {
  local repository_name=''
  local repository_platform=''
  local repository_url=''
  local repository_key=''
  local packages=''

  if bl64_os_is_distro "${BL64_OS_OL}-8" "${BL64_OS_OL}-9"; then
    bl64_msg_show_task 'Add YUM package repository'
    repository_name='mongodb-org-6.0'
    repository_platform='x86_64'
    repository_url="https://repo.mongodb.org/yum/redhat/\$releasever/mongodb-org/6.0/${repository_platform}/"
    repository_key='https://www.mongodb.org/static/pgp/server-6.0.asc'
    packages='mongodb-org-tools mongodb-mongosh'
    bl64_pkg_repository_add "$repository_name" "$repository_url" "$repository_key"
  fi
  # shellcheck disable=SC2181
  (($? != 0)) && return 1

  bl64_msg_show_task 'deploy packages'
  # shellcheck disable=SC2086
  bl64_pkg_deploy $packages
}

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function inst64_mongodbcli_install() {
  bl64_dbg_app_show_function

  # shellcheck disable=SC2249
  case "$INST64_MONGODBCLI_VERSION" in
  '5') inst64_mongodbcli_install_v5 ;;
  '6') inst64_mongodbcli_install_v6 ;;
  esac
  # shellcheck disable=SC2181
  (($? != 0)) && return 1

  bl64_msg_show_task 'cleanup temporary files'
  bl64_fs_cleanup_full
  return 0
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function inst64_mongodbcli_initialize() {
  bl64_dbg_app_show_function

  bl64_check_privilege_root &&
    bl64_pkg_setup ||
    return $?

  case "$INST64_MONGODBCLI_VERSION" in
  '5' | '6') bl64_os_check_version "${BL64_OS_OL}-8" "${BL64_OS_OL}-9" ;;
  *) bl64_check_alert_unsupported "MongoDB CLI Version: ${INST64_MONGODBCLI_VERSION}" ;;
  esac
}

#
# Main
#

declare inst64_mongodbcli_installer_description='Install application: MongoDB CLI'
declare -i inst64_mongodbcli_status=0

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$inst64_mongodbcli_installer_description"

[[ -n "$INST64_DEBUG" ]] && bl64_dbg_all_enable
inst64_mongodbcli_initialize &&
  inst64_mongodbcli_install
inst64_mongodbcli_status=$?

bl64_msg_show_batch_finish "$inst64_mongodbcli_status" "$inst64_mongodbcli_installer_description"
# shellcheck disable=SC2086
exit $inst64_mongodbcli_status
