#!/usr/bin/env bash
# Template: 1.2.0
#######################################
# Installer64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/installer64
# Version: 1.0.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Base Installer64 parameters
export INST64_BASHLIB64="${INST64_BASHLIB64:-/opt/bl64/bashlib64.bash}"
export INST64_DEBUG="${INST64_DEBUG:-}"
export INST64_INSTALLER_ROOT="${INST64_INSTALLER_ROOT:-/opt/installer64}"
export INST64_LOCAL_ROOT="${INST64_LOCAL_ROOT:-/usr/local}"
export INST64_LOCAL_BIN="${INST64_LOCAL_BIN:-${INST64_LOCAL_ROOT}/bin}"
export INST64_OPT_ROOT="${INST64_OPT_ROOT:-/opt}"
export INST64_TMP="${INST64_TMP:-/tmp}"

# shellcheck source=SCRIPTDIR/../lib/bashlib64.bash
source "$INST64_BASHLIB64" || { echo 'Error: BashLib64 not found. Please run the install-bashlib64 script and retry.' && exit 1; }

#
# Globals
#

export INST64_KREW_PLATFORM="${INST64_KREW_PLATFORM:-linux_amd64}"
export INST64_KREW_VERSION="${INST64_KREW_VERSION:-latest}"

#
# Functions
#

function inst64_krew_install_custom_package() {
  bl64_dbg_app_show_function
  local repo_owner='kubernetes-sigs'
  local repo_name='krew'
  local package_prefix='krew-'
  local package_sufix='.tar.gz'
  local package_name=''
  local work_path=''

  bl64_msg_show_task 'download application'
  work_path="$(bl64_fs_create_tmpdir)" || return $?
  if [[ "$INST64_KREW_VERSION" == 'latest' ]]; then
    INST64_KREW_VERSION="$(bl64_vcs_github_release_get_latest "$repo_owner" "$repo_name")" ||
      return $?
  fi
  package_name="${package_prefix}${INST64_KREW_PLATFORM}${package_sufix}"

  bl64_rxtx_github_get_asset "$repo_owner" "$repo_name" "$INST64_KREW_VERSION" "$package_name" "${work_path}/${package_name}" &&
    bl64_arc_open_tar "${work_path}/${package_name}" "${work_path}" ||
    return $?

  bl64_msg_show_task 'deploy application'
  "${work_path}/${package_prefix}${INST64_KREW_PLATFORM}" install krew ||
    return $?

  bl64_msg_show_task 'cleanup temporary files'
  bl64_fs_rm_tmpdir "$work_path"
  return 0
}

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function inst64_krew_install() {
  bl64_dbg_app_show_function
  inst64_krew_install_custom_package
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function inst64_krew_initialize() {
  bl64_dbg_app_show_function
  bl64_os_check_version \
    "${BL64_OS_OL}" &&
    bl64_check_privilege_not_root &&
    bl64_arc_setup
}

#
# Main
#

declare inst64_krew_installer_description='Install application: Krew'

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$inst64_krew_installer_description"

[[ -n "$INST64_DEBUG" ]] && bl64_dbg_lib_enable
inst64_krew_initialize &&
  inst64_krew_install
bl64_msg_show_batch_finish $? "$inst64_krew_installer_description"
