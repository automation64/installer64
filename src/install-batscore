#!/usr/bin/env bash
# Template: 1.2.0
#######################################
# Installer64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/installer64
# Version: 2.0.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# BashLib64 location
export INST64_BASHLIB64="${INST64_BASHLIB64:-/opt/bl64}"
# Enable debugging? Set to YES to enable
export INST64_DEBUG="${INST64_DEBUG:-}"
# Base path for local applications
export INST64_LOCAL_ROOT="${INST64_LOCAL_ROOT:-/usr/local}"
# Local applications binaries location
export INST64_LOCAL_BIN="${INST64_LOCAL_BIN:-${INST64_LOCAL_ROOT}/bin}"
# Base path for 3rd party applications
export INST64_OPT_ROOT="${INST64_OPT_ROOT:-/opt}"

# shellcheck source=SCRIPTDIR/../lib/bashlib64.bash
source "${INST64_BASHLIB64}/bashlib64.bash" ||
  { echo 'Error: BashLib64 not found. Please run the install-bashlib64 script and retry.' && exit 1; }

#
# Globals
#

export INST64_BATSCORE_SOURCE="${INST64_BATSCORE_SOURCE:-https://github.com/bats-core}"
export INST64_BATSCORE_TARGET="${INST64_BATSCORE_TARGET:-${INST64_OPT_ROOT}/bats-core}"

export INST64_BATSCORE_TARGET_HELPERS="${INST64_BATSCORE_TARGET}/test_helper"

#
# Functions
#

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function inst64_batscore_install() {
  bl64_dbg_app_show_function
  local app_name_core="bats-core"
  local app_name_support="bats-support"
  local app_name_assert="bats-assert"
  local app_name_file="bats-file"
  local app_cli='bats'

  bl64_msg_show_task 'deploy application'
  bl64_fs_set_umask "$BL64_FS_UMASK_RW_USER_RO_ALL" &&
    bl64_vcs_git_clone "${INST64_BATSCORE_SOURCE}/${app_name_core}.git" "${INST64_OPT_ROOT}" 'master' &&
    bl64_fs_mkdir_full "${INST64_BATSCORE_TARGET_HELPERS}" &&
    bl64_vcs_git_clone "${INST64_BATSCORE_SOURCE}/${app_name_support}.git" "${INST64_BATSCORE_TARGET_HELPERS}" 'master' &&
    bl64_vcs_git_clone "${INST64_BATSCORE_SOURCE}/${app_name_assert}.git" "${INST64_BATSCORE_TARGET_HELPERS}" 'master' &&
    bl64_vcs_git_clone "${INST64_BATSCORE_SOURCE}/${app_name_file}.git" "${INST64_BATSCORE_TARGET_HELPERS}" 'master' ||
    return $?

  bl64_msg_show_task "publish application to searchable path (${INST64_LOCAL_BIN})"
  # shellcheck disable=SC2086
  bl64_fs_run_ln $BL64_FS_SET_LN_SYMBOLIC "${INST64_BATSCORE_TARGET}/bin/${app_cli}" "${INST64_LOCAL_BIN}/${app_cli}" ||
    return $?

  return 0
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function inst64_batscore_initialize() {
  bl64_dbg_app_show_function

  bl64_vcs_setup &&
    bl64_os_check_version \
      "${BL64_OS_ALM}" \
      "${BL64_OS_ALP}" \
      "${BL64_OS_CNT}" \
      "${BL64_OS_DEB}" \
      "${BL64_OS_FD}" \
      "${BL64_OS_OL}" \
      "${BL64_OS_RCK}" \
      "${BL64_OS_RHEL}" \
      "${BL64_OS_SLES}" \
      "${BL64_OS_UB}" &&
    bl64_check_privilege_root
}

#
# Main
#

declare inst64_batscore_installer_description='Install application: BatsCore'

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$inst64_batscore_installer_description"

[[ -n "$INST64_DEBUG" ]] && bl64_dbg_all_enable
inst64_batscore_initialize &&
  inst64_batscore_install

bl64_msg_show_batch_finish $? "$inst64_batscore_installer_description"
