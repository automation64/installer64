#!/usr/bin/env bash
# Template: 1.1.0
#######################################
# Installer64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/installer64
# Version: 1.1.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Base Installer64 parameters
export INST64_BASHLIB64="${INST64_BASHLIB64:-/opt/bl64/bashlib64.bash}"
export INST64_DEBUG="${INST64_DEBUG:-}"
export INST64_LOCAL_ROOT="${INST64_LOCAL_ROOT:-/usr/local}"
export INST64_LOCAL_BIN="${INST64_LOCAL_BIN:-${INST64_LOCAL_ROOT}/bin}"
export INST64_OPT_ROOT="${INST64_OPT_ROOT:-/opt}"

# shellcheck source=SCRIPTDIR/../lib/bashlib64.bash
source "$INST64_BASHLIB64" || { echo 'Error: BashLib64 not found. Please run the install-bashlib64 script and retry.' && exit 1; }

#
# Globals
#

export INST64_KUBESCAPE_PLATFORM="${INST64_KUBESCAPE_PLATFORM:-ubuntu}"
export INST64_KUBESCAPE_TARGET="${INST64_KUBESCAPE_TARGET:-${INST64_OPT_ROOT}/kubescape}"
export INST64_KUBESCAPE_VERSION="${INST64_KUBESCAPE_VERSION:-latest}"

#
# Functions
#

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function inst64_kubescape_install() {
  bl64_dbg_app_show_function
  local repo_owner='kubescape'
  local repo_name='kubescape'
  local package_prefix='kubescape-'
  local package_sufix='-latest'
  local package_name="${package_prefix}${INST64_KUBESCAPE_PLATFORM}${package_sufix}"
  local app_target_mode='0755'
  local app_target_owner='root'
  local app_cli_mode='0755'
  local app_cli='kubescape'

  bl64_msg_show_task 'deploy application'
  bl64_fs_create_dir "$app_target_mode" "$app_target_owner" "$app_target_owner" "$INST64_KUBESCAPE_TARGET" &&
    bl64_rxtx_github_get_asset "$repo_owner" "$repo_name" "$INST64_KUBESCAPE_VERSION" "$package_name" "${INST64_KUBESCAPE_TARGET}/${package_name}" "$BL64_VAR_ON" "$app_cli_mode" ||
    return $?

  bl64_msg_show_task "publish application to searchable path (${INST64_LOCAL_BIN})"
  # shellcheck disable=SC2086
  bl64_fs_run_ln $BL64_FS_SET_LN_SYMBOLIC $BL64_FS_SET_LN_FORCE "${INST64_KUBESCAPE_TARGET}/${package_name}" "${INST64_LOCAL_BIN}/${app_cli}"
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function inst64_kubescape_initialize() {
  bl64_dbg_app_show_function

  bl64_arc_setup &&
    bl64_os_check_version \
      "${BL64_OS_UB}-22" &&
    bl64_check_privilege_root
}

#
# Main
#

declare inst64_kubescape_installer_description='Install application: Kubescape'
declare -i inst64_kubescape_status=0

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$inst64_kubescape_installer_description"

[[ -n "$INST64_DEBUG" ]] && bl64_dbg_lib_enable
inst64_kubescape_initialize &&
  inst64_kubescape_install
inst64_kubescape_status=$?

bl64_msg_show_batch_finish "$inst64_kubescape_status" "$inst64_kubescape_installer_description"
exit $inst64_kubescape_status
