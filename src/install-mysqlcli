#!/usr/bin/env bash
# Template: 2.2.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Home root
declare INST64_HOME="${HOME}/at64"
# BashLib64 location
declare INST64_BASHLIB64="${INST64_BASHLIB64:-}"
[[ -d "$INST64_HOME" ]] && INST64_BASHLIB64="${INST64_BASHLIB64:-${INST64_HOME}/bl64}" || INST64_BASHLIB64="${INST64_BASHLIB64:-/opt/bl64}" 
# shellcheck source-path=lib/bl64 disable=SC2015
source "${INST64_BASHLIB64}/bashlib64-module-api.bash" &&
  source "${INST64_BASHLIB64}/bashlib64-module-xsv.bash" &&
  source "${INST64_BASHLIB64}/bashlib64-module-vcs.bash" &&
  source "${INST64_BASHLIB64}/bashlib64-module-bsh.bash" &&
  source "${INST64_BASHLIB64}/bashlib64-module-rxtx.bash" &&
  source "${INST64_BASHLIB64}/bashlib64-module-fs.bash" &&
  source "${INST64_BASHLIB64}/bashlib64-module-txt.bash" &&
  source "${INST64_BASHLIB64}/bashlib64-module-fmt.bash" &&
  source "${INST64_BASHLIB64}/bashlib64-module-cryp.bash" &&
  source "${INST64_BASHLIB64}/bashlib64-module-pkg.bash" &&
  source "${INST64_BASHLIB64}/bashlib64-core.bash" ||
  { echo 'Error: BashLib64 not found. Please run the install-bashlib64 script and retry.' && exit 1; }

#
# Globals
#

# Enable debugging? Set to YES to enable
declare INST64_DEBUG="${INST64_DEBUG:-}"
# Base path for local applications
declare INST64_LOCAL_ROOT="${INST64_LOCAL_ROOT:-/usr/local}"
# Local applications binaries location
declare INST64_LOCAL_BIN="${INST64_LOCAL_BIN:-${INST64_LOCAL_ROOT}/bin}"
# Location for temporary files
declare INST64_TMP="${INST64_TMP:-/tmp}"
# Base path for 3rd party applications
declare INST64_OPT_ROOT="${INST64_OPT_ROOT:-}"
# Install system wide? Requires root privilege
declare INST64_SYSTEM_WIDE="${INST64_SYSTEM_WIDE:-}"

# Installation method
declare INST64_MYSQLCLI_METHOD="${INST64_MYSQLCLI_METHOD:-EXTERNAL}"
declare INST64_MYSQLCLI_PLATFORM_YUM="${INST64_MYSQLCLI_PLATFORM_YUM:-x86_64}"
declare INST64_MYSQLCLI_VERSION="${INST64_MYSQLCLI_VERSION:-8}"

declare INST64_MYSQLCLI_REPOSITORY_NAME='mysql-tools-community'
declare INST64_MYSQLCLI_SOURCE_YUM='http://repo.mysql.com/yum/mysql-tools-community/el'
bl64_dbg_app_show_comments 'deprecated: https://repo.mysql.com/RPM-GPG-KEY-mysql-2022'
declare INST64_MYSQLCLI_REPOSITORY_KEY_YUM='https://repo.mysql.com/RPM-GPG-KEY-mysql-2023'
declare INST64_MYSQLCLI_PACKAGES=''
declare INST64_MYSQLCLI_CLI_NAME='mysqlsh'
declare INST64_MYSQLCLI_CLI_PATH=''

#
# Functions
#

function inst64_mysqlcli_add_repository() {
  bl64_dbg_app_show_function
  local repository_url=''
  local repository_key=''
  local repository_extra_1=''
  local repository_extra_2=''

  if bl64_os_is_distro "${BL64_OS_OL}-9"; then
    repository_url="${INST64_MYSQLCLI_SOURCE_YUM}/9/${INST64_MYSQLCLI_PLATFORM_YUM}"
    repository_key="$INST64_MYSQLCLI_REPOSITORY_KEY_YUM"
  fi

  bl64_msg_show_task 'Add external package repository'
  bl64_pkg_repository_add "$INST64_MYSQLCLI_REPOSITORY_NAME" \
    "$repository_url" "$repository_key" \
    "$repository_extra_1" "$repository_extra_2"
}

function inst64_mysqlcli_install_external_packages() {
  bl64_dbg_app_show_function

  INST64_MYSQLCLI_CLI_PATH="/usr/bin/${INST64_MYSQLCLI_CLI_NAME}"

  bl64_msg_show_task 'deploy packages'
  # shellcheck disable=SC2086
  bl64_pkg_deploy $INST64_MYSQLCLI_PACKAGES
}

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function inst64_mysqlcli_install() {
  bl64_dbg_app_show_function
  inst64_mysqlcli_select_packages || return $?
  if [[ "$INST64_MYSQLCLI_METHOD" == 'EXTERNAL' ]]; then
    inst64_mysqlcli_install_external_packages
  fi
}

#######################################
# Select installation packages and related information
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package name list
# Returns:
#   0: selection ok
#   >0: selection failed
#######################################
function inst64_mysqlcli_select_packages() {
  bl64_dbg_app_show_function
  if [[ "$INST64_MYSQLCLI_METHOD" == 'EXTERNAL' ]]; then
    if bl64_os_is_distro "${BL64_OS_OL}-9"; then
      INST64_MYSQLCLI_PACKAGES='mysql-shell'
    fi
  fi
  [[ -z "$INST64_MYSQLCLI_PACKAGES" ]] && bl64_msg_show_error 'unable to determine package name' && return 1
  return 0
}

#######################################
# Prepare installation
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Preparation progress and errors
# Returns:
#   0: preparation ok
#   >0: preparation failed
#######################################
function inst64_mysqlcli_prepare() {
  bl64_dbg_app_show_function
  bl64_msg_show_task 'prepare deployment'
  inst64_mysqlcli_add_repository
}

#######################################
# Verify installation
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Verification progress and errors
# Returns:
#   0: verification ok
#   >0: verification failed
#######################################
function inst64_mysqlcli_verify() {
  bl64_dbg_app_show_function
  bl64_msg_show_task 'verify deployment'
  "$INST64_MYSQLCLI_CLI_PATH" --version
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: initialization failed
#######################################
function inst64_mysqlcli_initialize() {
  bl64_dbg_app_show_function
  if [[ -z "$INST64_SYSTEM_WIDE" ]]; then
    [[ -d "$INST64_HOME" ]] && INST64_SYSTEM_WIDE='NO' || INST64_SYSTEM_WIDE='YES'
  fi
  if [[ -z "$INST64_OPT_ROOT" ]]; then
    bl64_lib_flag_is_enabled "$INST64_SYSTEM_WIDE" && INST64_OPT_ROOT='/opt' || INST64_OPT_ROOT="$INST64_HOME"
  fi
  bl64_fmt_check_value_in_list 'invalid installation method for the parameter INST64_MYSQLCLI_METHOD' \
    "$INST64_MYSQLCLI_METHOD" \
    'EXTERNAL' &&
    bl64_check_privilege_root &&
    bl64_cryp_setup &&
    bl64_pkg_setup ||
    return $?
  case "$INST64_MYSQLCLI_VERSION" in
  '8') bl64_os_check_version "${BL64_OS_OL}-9" ;;
  *) bl64_check_alert_unsupported "MySQL CLI Version: ${INST64_MYSQLCLI_VERSION}" ;;
  esac
  bl64_msg_show_setup 'Install application: MySQL Community CLI' \
    'INST64_SYSDEN64_METHOD' 'INST64_SYSTEM_WIDE' 
}

#
# Main
#

bl64_lib_script_version_set '1.1.0'
bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$BL64_SCRIPT_ID"

[[ -n "$INST64_DEBUG" ]] && bl64_dbg_all_enable
inst64_mysqlcli_initialize &&
  inst64_mysqlcli_prepare &&
  inst64_mysqlcli_install &&
  inst64_mysqlcli_verify
bl64_msg_show_batch_finish $? "$BL64_SCRIPT_ID"
