#!/usr/bin/env bash
# Template: 1.1.0
#######################################
# Installer64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/installer64
# Version: 1.2.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Base Installer64 parameters
export INST64_BASHLIB64="${INST64_BASHLIB64:-/opt/bl64/bashlib64.bash}"
export INST64_DEBUG="${INST64_DEBUG:-}"
export INST64_LOCAL_ROOT="${INST64_LOCAL_ROOT:-/usr/local}"
export INST64_LOCAL_BIN="${INST64_LOCAL_BIN:-${INST64_LOCAL_ROOT}/bin}"
export INST64_OPT_ROOT="${INST64_OPT_ROOT:-/opt}"

# shellcheck source=SCRIPTDIR/../lib/bashlib64.bash
source "$INST64_BASHLIB64" || { echo 'Error: BashLib64 not found. Please run the install-bashlib64 script and retry.' && exit 1; }

#
# Globals
#

# Use OS native package?
export INST64_PODMAN_FLAG_NATIVE="${INST64_PODMAN_FLAG_NATIVE:-$BL64_VAR_ON}"

#
# Functions
#

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function inst64_podman_install() {
  bl64_dbg_app_show_function
  local packages=''

  if bl64_os_match "${BL64_OS_OL}"; then
    packages='podman'
  fi

  bl64_msg_show_task 'deploy packages'
  # shellcheck disable=SC2086
  bl64_pkg_deploy $packages ||
    return $?

  bl64_msg_show_task 'cleanup temporary files'
  bl64_fs_cleanup_full
  return 0
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function inst64_podman_initialize() {
  bl64_dbg_app_show_function

  [[ "$INST64_PODMAN_FLAG_NATIVE" != "$BL64_VAR_ON" ]] &&
    bl64_msg_show_error 'installer supports OS native packages only' &&
    return 1

  bl64_os_check_version "${BL64_OS_OL}-9" &&
    bl64_check_privilege_root &&
    bl64_pkg_setup
}

#
# Main
#

declare inst64_podman_installer_description='Install application: Podman'
declare -i inst64_podman_status=0

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$inst64_podman_installer_description"

[[ -n "$INST64_DEBUG" ]] && bl64_dbg_all_enable
inst64_podman_initialize &&
  inst64_podman_install
inst64_podman_status=$?

bl64_msg_show_batch_finish "$inst64_podman_status" "$inst64_podman_installer_description"
exit $inst64_podman_status
