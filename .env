#!/bin/sh
#
# Project development environment variables
#
# * Use along with .local and .secrets
# * Template version: 2.3.0
#

# Base file and directory names for building paths
DEV_BASE_BUILD='build'
export DEV_BASE_BUILD
DEV_BASE_TEST='test'
export DEV_BASE_TEST
DEV_BASE_SRC='src'
export DEV_BASE_SRC

# Base path for builds
DEV_BUILD="${DEV_ROOT}/${DEV_BASE_BUILD}"
export DEV_BUILD

# Source files
DEV_SRC="${DEV_ROOT}/${DEV_BASE_SRC}"
export DEV_SRC

# Test files
DEV_TEST="${DEV_ROOT}/${DEV_BASE_TEST}"
export DEV_TEST

# Dev/Test scripts
DEV_BIN="${DEV_ROOT}/bin"
export DEV_BIN

# Dev/Test libs
DEV_LIB="${DEV_ROOT}/lib"
export DEV_LIB

# Base path for documentation
DEV_DOCS="${DEV_ROOT}/docs"
export DEV_DOCS

# Temporary data location
DEV_TMP="${DEV_ROOT}/.tmp"
export DEV_TMP

# Variable data location
DEV_VAR="${DEV_ROOT}/.var"
export DEV_VAR

#
# CICD components
#

DEV_CICD_BASHLIB64_REPO='https://raw.githubusercontent.com/automation64/bashlib64/main/bashlib64.bash'
export DEV_CICD_BASHLIB64_REPO

DEV_CICD_BASHLIB64="${DEV_LIB}/bashlib64.bash"
export DEV_CICD_BASHLIB64

DEV_CICD_TESTMANSH_REPO='https://raw.githubusercontent.com/automation64/testmansh/main/testmansh'
export DEV_CICD_BASHLIB64

DEV_CICD_TESTMANSH="${DEV_LIB}/testmansh"
export DEV_CICD_TESTMANSH

# Lint / Script path
DEV_CICD_LINT_BASH="${DEV_BIN}/dev-lint-bash"
export DEV_CICD_LINT_BASH

# Pack / Package name
DEV_PACK_NAME='installer64-scripts.tgz'
export DEV_PACK_NAME

# Pack / Package name
DEV_PACK_FULL_PATH="${DEV_BUILD}/${DEV_PACK_NAME}"
export DEV_PACK_FULL_PATH

# Pack / Script path
DEV_CICD_PACK="${DEV_BIN}/dev-pack"
export DEV_CICD_PACK

# Test / Script
DEV_CICD_TEST="${DEV_BIN}/dev-test"
export DEV_CICD_TEST

# Test / Cases
DEV_CICD_TEST_CASES="bash"
export DEV_CICD_TEST_CASES

# Test / Container Registry
DEV_CICD_TEST_REGISTRY="ghcr.io/automation64/bash-test"
export DEV_CICD_TEST_REGISTRY

# Test / Container
DEV_TEST_CONTAINER_UBUNTU='ubuntu-22.4-bash-test'
export DEV_TEST_CONTAINER_UBUNTU

DEV_TEST_CONTAINER_OL='oraclelinux-9-bash-test'
export DEV_TEST_CONTAINER_OL

DEV_TEST_CONTAINER_ALP='alpine-3-bash-test'
export DEV_TEST_CONTAINER_ALP


# Test / Container
DEV_TEST_LIST_UBUNTU=''
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-yamllint_01"
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-go_01"
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-gitui_01"
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-mkdocs_01"
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-mkdocs_02"
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-kubectl_01"
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-kubescape_01"
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-ghcli_01"
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-python_01"
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-ansible_01"
DEV_TEST_LIST_UBUNTU="${DEV_TEST_LIST_UBUNTU} install-ansiblelint_01"
export DEV_TEST_LIST_UBUNTU

DEV_TEST_LIST_OL=''
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-azurecli_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-cosign_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-crane_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-dockle_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-gitui_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-hadolint_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-krew_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-lazydocker_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-istioctl_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-trivy_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-ghcli_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-terraform_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-awscli_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-dockercli_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-gcloud_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-helm_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-helm-chart-releaser_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-krew_02"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-kubectl_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-mongodbcli_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-podman_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-psqlcli_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-k9s_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-tflint_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-tfsec_01"
DEV_TEST_LIST_OL="${DEV_TEST_LIST_OL} install-ansible_01"
export DEV_TEST_LIST_OL

DEV_TEST_LIST_ALP=''
DEV_TEST_LIST_ALP="${DEV_TEST_LIST_ALP} install-terraform_01"
DEV_TEST_LIST_ALP="${DEV_TEST_LIST_ALP} install-shellcheck_01"
DEV_TEST_LIST_ALP="${DEV_TEST_LIST_ALP} install-tflint_01"
DEV_TEST_LIST_ALP="${DEV_TEST_LIST_ALP} install-tfsec_01"
export DEV_TEST_LIST_ALP

#
# Project specific variables
#
